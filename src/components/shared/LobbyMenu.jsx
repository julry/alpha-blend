import styled from "styled-components";
import { useProgress } from "../../contexts/ProgressContext"
import { Block } from "./Block";
import { AnimatePresence, motion } from "framer-motion";
import { Bold } from "./Spans";
import { useSizeRatio } from "../../hooks/useSizeRatio";
import { DAYS } from "../../constants/days";
import { WEEK_TO_CHALLENGE_NAME } from "../../constants/weeksInfo";
import { GAME_SCREENS_WEEK1, GAME_SCREENS_WEEK2, GAME_SCREENS_WEEK3, GAME_SCREENS_WEEK4 } from "../../constants/screens";
import { useState } from "react";

const Wrapper = styled(motion.div)`
    position: absolute;
    width: 100%;
    height: 100%;
    padding-bottom: var(--spacing_x6);
    inset: 0;
    z-index: 23;
    display: flex;
    align-items: flex-end;
    justify-content: center;

    & > div {
        text-align: left;
        align-items: flex-start;
    }
`;

const IconsWrapper = styled.div`
    display: flex;
    gap: var(--spacing_x2);
    align-items: center;
`;

const InfoWrapper = styled(motion.div)`
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
`;

const IconButton = styled.button`
    width: ${({$ratio}) => $ratio * 37}px; 
    height: ${({$ratio}) => $ratio * 37}px; 
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: ${({$isCompleted}) => $isCompleted ? 'var(--color-red)' : '#B4B4B4'};
    ${({$isCurrent}) => $isCurrent && 'border: 1px solid #EF3124;box-shadow: 0px 0px 13.1px #ED3125;'};
    border-radius: var(--border-radius-sm);

    & svg {
        width: ${({$ratio}) => $ratio * 24}px; 
        height: ${({$ratio}) => $ratio * 24}px; 
    }
`;

const TYPE_TO_SVG = {
    game: () => <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M24 15.9988V17.3362C23.985 17.4409 23.9664 17.545 23.955 17.6503C23.8674 18.4678 23.6946 19.2575 23.2146 19.9401C22.6278 20.7742 21.603 21.1709 20.6371 20.9306C20.0101 20.7748 19.4917 20.412 19.0141 19.9838C17.9317 19.013 17.1037 17.8278 16.3351 16.5951C16.2487 16.4571 16.1635 16.3974 15.9991 16.398C13.664 16.4041 11.3282 16.4035 8.99243 16.398C8.83763 16.398 8.75903 16.4571 8.67143 16.5828C8.12364 17.3694 7.58845 18.1678 7.00046 18.9224C6.43767 19.645 5.78368 20.282 4.96349 20.7021C3.71611 21.3403 2.32533 20.9115 1.62154 19.6795C1.32515 19.1614 1.17455 18.5935 1.09055 18.0046C0.924954 16.844 1.00595 15.6889 1.17695 14.5382C1.59154 11.7464 2.41533 9.08708 3.65971 6.5688C4.02271 5.8345 4.4349 5.12855 5.02469 4.5538C5.30669 4.27906 5.62348 4.05359 6.02668 4.04066C6.77426 4.01663 7.52305 3.98768 8.27004 4.00554C9.14723 4.02649 9.81022 4.44045 10.223 5.2536C10.2554 5.31766 10.352 5.38604 10.4192 5.38666C11.804 5.39467 13.1888 5.39405 14.5735 5.38666C14.6419 5.38666 14.7415 5.32259 14.7739 5.25976C15.1969 4.42937 15.8779 4.02526 16.7707 4.00431C17.4061 3.98953 18.0427 4.04004 18.6781 4.02464C19.2481 4.01047 19.6939 4.24394 20.0689 4.65236C20.2531 4.85319 20.4277 5.06571 20.5837 5.29056C21.3264 6.36181 21.8454 7.55258 22.305 8.77168C23.058 10.7688 23.6172 12.8189 23.8776 14.9485C23.9202 15.2978 23.9586 15.6483 23.9994 15.9976L24 15.9988ZM6.46707 10.5563C6.16107 10.5563 5.89228 10.555 5.62348 10.5563C5.16869 10.5594 4.84049 10.8661 4.83749 11.2893C4.83449 11.7113 5.16449 12.0279 5.61508 12.0316C5.88988 12.0341 6.16527 12.0316 6.46707 12.0316C6.46707 12.3415 6.47007 12.6316 6.46587 12.9212C6.46287 13.1491 6.53127 13.3456 6.69507 13.4996C6.91346 13.7041 7.16906 13.7577 7.44385 13.6456C7.73665 13.5255 7.88845 13.2883 7.89985 12.968C7.91065 12.6637 7.90225 12.3587 7.90225 12.0316C8.18904 12.0316 8.44884 12.0323 8.70923 12.0316C9.19763 12.0298 9.53362 11.7236 9.52882 11.2863C9.52402 10.8544 9.19523 10.5581 8.71703 10.5563C8.45064 10.555 8.18364 10.5563 7.90345 10.5563C7.90345 10.2415 7.90825 9.95813 7.90225 9.67476C7.89205 9.20474 7.58845 8.88502 7.16786 8.89118C6.75866 8.89734 6.47307 9.21706 6.46707 9.68153C6.46347 9.96429 6.46647 10.2464 6.46647 10.5569L6.46707 10.5563ZM14.126 6.88358H10.8746C11.2814 7.49467 11.795 7.87167 12.5018 7.87167C13.2086 7.87167 13.7228 7.49775 14.1254 6.88358H14.126ZM16.2847 12.0323C16.6537 12.0323 16.9177 11.8678 17.0353 11.5647C17.1529 11.2629 17.0623 10.9203 16.8115 10.7177C16.5463 10.5033 16.0831 10.4873 15.7987 10.6819C15.5317 10.8643 15.4147 11.1969 15.5083 11.5062C15.6103 11.8444 15.8875 12.0316 16.2847 12.0316V12.0323ZM18.5347 9.71357C18.5347 9.21952 18.2527 8.89057 17.8255 8.8881C17.3971 8.88502 17.1007 9.21582 17.0977 9.70001C17.0947 10.191 17.4013 10.5477 17.8237 10.544C18.2431 10.5403 18.5341 10.2002 18.5347 9.71357ZM19.3651 12.0323C19.7773 12.031 20.0683 11.813 20.1439 11.4495C20.2681 10.8483 19.6993 10.3912 19.0705 10.5871C18.7117 10.6986 18.5041 11.0405 18.5623 11.4236C18.6181 11.7939 18.9343 12.0335 19.3657 12.0323H19.3651ZM18.5347 12.8842C18.5359 12.3932 18.2527 12.0569 17.8321 12.0495C17.4067 12.0427 17.0965 12.3939 17.0977 12.883C17.0983 13.3672 17.3929 13.701 17.8183 13.7004C18.2479 13.7004 18.5335 13.3746 18.5347 12.8836V12.8842Z" fill="white"/>
            </svg>,
    blender: () => <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M16.2969 17.001C16.7596 17.001 16.8658 17.1059 16.8838 17.5596C16.9448 19.1288 17.0129 20.6987 17.0703 22.2686C17.1037 23.1896 16.7287 23.7013 15.8438 23.9727C15.8314 23.977 15.8218 23.9911 15.8105 24H7.42285L7.11035 23.8799C7.0061 23.8394 6.9044 23.795 6.8125 23.7354C6.33052 23.4209 6.10602 22.9547 6.12695 22.3809C6.1724 21.1549 6.22749 19.9295 6.27832 18.7041C6.29566 18.2933 6.31089 17.8818 6.33301 17.4717C6.35214 17.1136 6.47455 17.0017 6.84082 17.001H16.2969ZM11.626 18.1572C10.5646 18.1584 9.70467 19.0261 9.71289 20.0879C9.72126 21.1384 10.5839 21.9871 11.6387 21.9824C12.6935 21.9776 13.5403 21.1224 13.5361 20.0635C13.5319 19.004 12.6819 18.1561 11.626 18.1572ZM12.7695 20.0635C12.7725 20.7002 12.2748 21.2112 11.6445 21.2178C11.0042 21.2242 10.4811 20.7125 10.4775 20.0771C10.4742 19.443 10.9951 18.9226 11.6318 18.9238C12.263 18.9251 12.7661 19.429 12.7695 20.0635ZM15.957 14.5146C16.1865 14.5146 16.3197 14.628 16.3789 14.8398C16.4566 15.1206 16.5349 15.4011 16.6055 15.6836C16.6928 16.0334 16.5349 16.2328 16.1689 16.2334C14.6527 16.2352 13.1364 16.2344 11.6201 16.2344H7.11426C6.63605 16.2343 6.5008 16.054 6.62695 15.5869C6.69329 15.3421 6.76656 15.0986 6.82812 14.8525C6.88551 14.6232 7.02409 14.5147 7.26074 14.5146C10.1592 14.5164 13.058 14.5164 15.957 14.5146ZM7.61523 2.82227H16.0898C16.9592 2.82229 17.3915 3.25092 17.4209 4.12402C17.5261 7.24699 17.2055 10.323 16.4023 13.3447C16.3162 13.6674 16.2162 13.749 15.8838 13.749C13.0291 13.7496 10.175 13.7496 7.32031 13.749C6.99083 13.749 6.88336 13.6627 6.79785 13.3447C6.26623 11.3664 5.95611 9.35246 5.84668 7.30762C5.84249 7.22573 5.82008 7.14261 5.82715 7.0625C5.91206 6.16227 5.53932 5.39155 5.16797 4.6123C5.05736 4.37933 4.99021 4.09655 5.00098 3.84082C5.02316 3.29522 5.47788 2.86109 6.02441 2.83594C6.55349 2.81139 7.08496 2.82286 7.61523 2.82227ZM18.6504 4.76953C19.3363 4.83063 20.005 5.49017 20.0684 6.21191C20.1036 6.61244 20.0752 7.01836 20.0752 7.42188C20.0974 7.42363 20.1203 7.42404 20.1426 7.42578C20.0894 7.93662 20.0966 8.46281 19.9717 8.95508C19.7474 9.8371 19.1546 10.428 18.3057 10.7568C18.1281 10.8257 17.9534 10.8743 17.8428 10.6572C17.7363 10.4476 17.8246 10.1566 18.0195 10.0488C18.1953 9.95185 18.3829 9.87102 18.5449 9.75488C19.0209 9.4123 19.2965 8.94404 19.3145 8.35352C19.3336 7.71802 19.3334 7.08178 19.3232 6.44629C19.3154 5.97255 19.0369 5.66188 18.5801 5.52832C18.4566 5.49181 18.3095 5.4055 18.252 5.2998C18.1025 5.02249 18.3269 4.74078 18.6504 4.76953ZM14.6445 1C14.8729 1.10479 15.1083 1.19779 15.3271 1.31934C15.4952 1.41277 15.588 1.57137 15.5264 1.77441C15.4624 1.98525 15.3003 2.05491 15.0928 2.05371H8.21094C8.12907 2.05376 8.03169 2.07729 7.96777 2.04199C7.84699 1.97492 7.68821 1.89165 7.65234 1.78027C7.61651 1.66945 7.66933 1.45665 7.75781 1.39258C7.98264 1.2309 8.2491 1.12734 8.49902 1.00098H14.6436L14.6445 1Z" fill="white"/>
            </svg>,
    planner: () => <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M23.249 7.96484C23.249 12.817 23.2376 17.6693 23.2598 22.5215C23.2637 23.4944 22.5647 24 21.7783 24C15.347 23.9919 8.91665 23.9919 2.48535 24C1.68788 24.001 0.995999 23.4823 1 22.5254C1.02313 17.6732 1.00977 12.8209 1.00977 7.96875V7.61328L1.01074 7.6123H23.2305C23.2365 7.7331 23.249 7.84907 23.249 7.96484ZM19.624 19.958H9.11523C7.45191 19.958 5.78833 19.959 4.125 19.957C3.89168 19.957 3.68469 20.0063 3.68066 20.2783C3.67678 20.5632 3.88345 20.6399 4.13379 20.6318H19.666C19.7545 20.6319 19.8686 20.6633 19.9238 20.6201C20.0485 20.5234 20.2054 20.3996 20.2275 20.2656C20.2412 20.183 20.0426 20.0432 19.917 19.9688C19.8426 19.9256 19.7225 19.958 19.624 19.958ZM4.36133 16.876H9.40137V11.5039H4.36133V16.876ZM13.0244 15.541C12.9259 15.541 12.7978 15.5132 12.7344 15.5625C12.6258 15.6481 12.4862 15.7876 12.4902 15.8984C12.4955 16.0051 12.653 16.1257 12.7686 16.1992C12.841 16.2445 12.962 16.2158 13.0605 16.2158H16.3623V16.2178H19.499C19.6306 16.2178 19.7811 16.2553 19.8896 16.2041C20.0273 16.1397 20.207 16.0184 20.2344 15.8926C20.2786 15.6841 20.1089 15.5591 19.8906 15.543C19.8255 15.538 19.7595 15.541 19.6934 15.541H13.0244ZM12.9287 11.4951C12.7829 11.4971 12.5783 11.5941 12.5059 11.7119C12.3643 11.9425 12.591 12.1582 12.958 12.1582C15.2246 12.1602 17.4912 12.1581 19.7588 12.1602C20.0172 12.1602 20.2501 12.1067 20.2432 11.8037C20.2371 11.5148 20.0029 11.4834 19.7627 11.4844C18.6404 11.4884 17.5178 11.4863 16.3955 11.4863V11.4854C15.24 11.4854 14.0842 11.477 12.9287 11.4951ZM20.3691 2.69336C21.0328 2.72355 21.6756 2.69107 22.293 2.79883C22.8168 2.88959 23.1906 3.306 23.2178 3.8418C23.2691 4.87326 23.2334 5.90997 23.2334 6.97266V6.97461H1.04004C1.03 6.88006 1.01277 6.7964 1.01172 6.71191C1.00971 5.86277 1.00569 5.01324 1.01172 4.16309C1.01775 3.28587 1.55398 2.74101 2.43066 2.72168C2.90133 2.71161 3.37364 2.71973 3.89258 2.71973C3.89258 3.22332 3.88347 3.6937 3.89453 4.16406C3.91465 4.98287 4.48663 5.53525 5.25781 5.49414C5.90246 5.45989 6.42609 4.94946 6.44922 4.30176C6.4673 3.79625 6.45313 3.2887 6.45312 2.75098H10.8613C10.8613 3.28468 10.834 3.81233 10.8672 4.33496C10.9225 5.21737 11.8646 5.76052 12.6631 5.38379C13.1176 5.16923 13.3802 4.80262 13.4014 4.29395C13.4195 3.85387 13.4112 3.41178 13.4092 2.9707C13.4092 2.82171 13.4264 2.71692 13.6182 2.7168C14.9728 2.72284 16.3279 2.72159 17.6826 2.72461C17.7128 2.72466 17.7434 2.74636 17.8057 2.77051C17.8057 3.21061 17.8037 3.66119 17.8057 4.11035C17.8107 4.93524 18.324 5.49297 19.0771 5.49512C19.8273 5.49713 20.3549 4.93984 20.3682 4.12109C20.3762 3.67082 20.3691 3.21918 20.3691 2.69336ZM5.16211 1.00098C5.44569 0.990904 5.74244 1.22669 5.7998 1.6084C5.86517 2.03951 5.85388 2.48274 5.875 2.9209H5.85352V2.91992C5.85352 3.22816 5.8586 3.53551 5.85156 3.84375C5.84854 3.97367 5.83595 4.10851 5.80176 4.2334C5.69616 4.61819 5.44417 4.83548 5.14648 4.81836C4.86289 4.80121 4.55705 4.53245 4.54297 4.17285C4.5108 3.33989 4.51088 2.50289 4.54004 1.66992C4.55311 1.29641 4.87059 1.01134 5.16211 1.00098ZM19.0684 1.00098C19.4384 0.989897 19.7299 1.36455 19.749 1.90137C19.7611 2.2418 19.751 2.58339 19.751 2.92383H19.7529C19.7529 3.22068 19.758 3.51662 19.752 3.81348C19.7489 3.95541 19.7432 4.10137 19.708 4.23828C19.6195 4.58782 19.3567 4.82849 19.0781 4.81641C18.7284 4.80016 18.5603 4.56379 18.4658 4.2627C18.4306 4.14892 18.4102 4.02604 18.4092 3.90723C18.4042 3.24744 18.4011 2.58749 18.4092 1.92871C18.4142 1.40693 18.7033 1.01206 19.0684 1.00098ZM12.1289 1C12.505 0.998993 12.7877 1.3973 12.8008 1.94629V2.93457L12.8018 2.93652C12.8018 3.25455 12.8069 3.57358 12.7988 3.8916C12.7958 4.02155 12.7805 4.15738 12.7402 4.28027C12.6407 4.57916 12.4699 4.82341 12.1162 4.81445C11.7824 4.8064 11.616 4.57117 11.5225 4.2832C11.4823 4.16046 11.4639 4.0253 11.4629 3.89551C11.4569 3.24691 11.4549 2.59782 11.4609 1.94922C11.466 1.3993 11.7529 1.00112 12.1289 1Z" fill="white"/>
            </svg>
};

const WEEK_TO_GAME_SCREENS = {
    1: GAME_SCREENS_WEEK1,
    2: GAME_SCREENS_WEEK2,
    3: GAME_SCREENS_WEEK3,
    4: GAME_SCREENS_WEEK4,
}

const TYPE_TO_GAME_NAME = {
    game: 'Челлендж недели',
    planner: 'Планнер',
    blender: 'Блендер'
}

const DAY_TO_NAME = {
    [DAYS.Friday]: 'пятницу',
    [DAYS.Wednesday]: 'среду',
}

export const LobbyMenu = ({week, type, onClose}) => {
    const ratio = useSizeRatio();
    const [isInitial, setIsInitial] = useState(true);
    const [isAlreadyDone, setIsAlreadyDone] = useState(false);
    const [isClosed, setIsClosed] = useState(false);
    const {user, next, day: progressDay} = useProgress();
    const gameName = type === 'game' ? `game${WEEK_TO_CHALLENGE_NAME[week]}` : `${type}${week}`;

    const icon = TYPE_TO_SVG[type];

    const getIsCompleted = (day) => user[gameName][day]?.isCompleted;
    const getIsCurrent = (day, prevDay) => !getIsCompleted(day) && (day === DAYS.Monday || getIsCompleted(prevDay));

    const handleClick = (day, prevDay) => {
        if (getIsCurrent(day, prevDay)) {
            next(WEEK_TO_GAME_SCREENS[week][type][day]);

            return;
        }

        if (getIsCompleted(day)) {
            setIsInitial(false);
            setIsClosed();
            setIsAlreadyDone(true);

            return;
        }

        setIsInitial(false);
        setIsAlreadyDone(false);
        setIsClosed(day);
    };

    return (
        <Wrapper initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}}>
            <Block hasCloseIcon onClose={onClose}>
                <p><Bold>Неделя {week}.</Bold></p>
                <IconsWrapper>
                    <IconButton 
                        $ratio={ratio} 
                        onClick={() => handleClick(DAYS.Monday)}
                        $isCompleted={getIsCompleted(DAYS.Monday)}
                        $isCurrent={!getIsCompleted(DAYS.Monday)}
                    >
                        {icon()}
                    </IconButton>
                    
                    <IconButton 
                        $ratio={ratio} 
                        onClick={() => handleClick(DAYS.Wednesday, DAYS.Monday)}
                        $isCompleted={getIsCompleted(DAYS.Wednesday)}
                        $isCurrent={getIsCurrent(DAYS.Wednesday, DAYS.Monday)}
                    >
                        {icon()}
                    </IconButton>

                    <IconButton 
                        $ratio={ratio} 
                        onClick={() => handleClick(DAYS.Friday, DAYS.Wednesday)}
                        $isCompleted={getIsCompleted(DAYS.Friday)}
                        $isCurrent={getIsCurrent(DAYS.Friday, DAYS.Wednesday)}
                    >
                        {icon()}
                    </IconButton>
                </IconsWrapper>
            </Block>
            <AnimatePresence>
                {isInitial && (
                    <InfoWrapper initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}}>
                        <Block onClose={() => setIsInitial(false)} hasCloseIcon>
                            <p>Здесь находятся <Bold>три уровня игры «{TYPE_TO_GAME_NAME[type]}».</Bold></p>
                            <p>Новые уровни появляются{'\n'}<Bold>в понедельник, среду и пятницу.</Bold></p>
                        </Block>
                    </InfoWrapper>
                )}
                {
                    isAlreadyDone && (
                       <InfoWrapper initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}}>
                            <Block>
                                <p><Bold>Ты уже прошёл эту игру.</Bold></p>
                                <p>Новые игры появляются{'\n'}<Bold>по понедельникам, средам и пятницам.</Bold></p>
                            </Block>
                        </InfoWrapper> 
                    )
                }
                {
                    isClosed && (
                       <InfoWrapper initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}}>
                            <Block>
                                <p><Bold>Пока закрыто —</Bold> эти игры откроются в {DAY_TO_NAME[isClosed]}.</p>
                                <p>Новые игры появляются{'\n'}<Bold>по понедельникам, средам и пятницам.</Bold></p>
                            </Block>
                        </InfoWrapper> 
                    )
                }
            </AnimatePresence>
        </Wrapper>
    )
}